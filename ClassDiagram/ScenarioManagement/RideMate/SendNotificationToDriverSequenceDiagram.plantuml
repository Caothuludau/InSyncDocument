@startuml SendNotificationToDriverSequenceDiagram
skinparam BackgroundColor #ffffff
skinparam sequence {
    LifeLineBorderColor #000000
    LifeLineBackgroundColor #7acff5
    ParticipantBackgroundColor #7acff5
    ParticipantBorderColor #000000
    ActorBackgroundColor #7acff5
    ActorBorderColor #000000
    ArrowColor #000000
    SequenceBoxBackgroundColor #7acff5
}

actor "Passenger" as User
participant "Android App" as App
participant "Backend Module" as Backend
participant "Database" as DB
participant "Notification Service" as NotificationService
actor "Driver" as Driver

User -> App : 1: Create or Delete Journey/Schedule
activate App

App -> Backend : 1.1: Submit Journey/Schedule Details (userID, journeyID)
activate Backend

Backend -> DB : 1.1.1: Save Journey/Schedule to Database
activate DB
DB --> Backend : 1.1.1.1: Confirm Save Success
deactivate DB

Backend -> Backend : 1.2: Check for Matching Drivers
alt Driver Found
    Backend -> NotificationService : 1.2.1: Trigger Notification for Matched Driver
    NotificationService -> DB : 1.2.1.1: Log Notification Data
    DB --> NotificationService : 1.2.1.1.1: Confirm Notification Logged
    NotificationService --> Backend : 1.2.1.2: Notification Sent
    Backend --> App : 1.3: Confirm Match Notification Sent
else No Driver Found
    Backend --> App : 1.3: Return No Match Found
end

App -> User : 1.4: Display Notification Status
deactivate Backend
deactivate App

NotificationService -> Driver : 2: Display Notification to Driver

@enduml
