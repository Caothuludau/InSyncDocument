@startuml ViewUpcomingSchedule
skinparam classAttributeIconSize 0
skinparam linetype ortho

skinparam BackgroundColor #ffffff
skinparam class {
    BackgroundColor #c6f8ff
    BorderColor #000000
}

skinparam package {
    BackgroundColor #ffffff
    BorderColor #000000
}

package pkgViewUpcomingSchedule <<Frame>>{

        class ScheduleListView {
            + displaySchedules(): void
        }

        class ScheduleListController {
            - schedules: List<DriverJourney>
            + fetchSchedules(): void
        }

        class DriverJourneyController {
            + getUpcomingSchedules(driverId: Long): ResponseEntity<ResponseWrapper<List<DriverJourneyResponseDto>>>
        }
 
        class DriverJourneyService {
            + getUpcomingSchedules(driverId: Long): List<DriverJourney>
        }

        class DriverJourneyRepository {
            + findByDriverIdAndStatus(driverId: Long, status: String): List<DriverJourney>
        }
  
        class DriverJourneyResponseDto {
            - journeyId: Long
            - startLocation: String
            - endLocation: String
            - departureTime: LocalDateTime
            - vehicleType: String
            - specialNotes: String
        }

        class ResponseWrapper<T> {
            - responseCode: int
            - message: String
            - data: T
        }

        class DriverJourney {
            - journeyId: long
            - user: User
            - startLocation: Location
            - endLocation: Location
            - departureTime: LocalDateTime
            - vehicleType: String
            - specialNotes: String
        }

        class User {
            - userId: long
            - name: String
            - phoneNumber: String
            - password: String
            - profilePicture: byte[]
            - isActive: boolean
            - isLocked: boolean
            - createdDate: LocalDateTime
            - tokenVersion: long
        }

        class Location {
            - locationId: long
            - address: String
            - latitude: double
            - longitude: double
        }
    

    ScheduleListView --> ScheduleListController
    ScheduleListController --> DriverJourneyController
    DriverJourneyController --> DriverJourneyService
    DriverJourneyService --> DriverJourneyRepository
    DriverJourneyService --> DriverJourneyResponseDto
    DriverJourneyController --> ResponseWrapper
    DriverJourneyService --> DriverJourney
    DriverJourneyRepository --> DriverJourney
    DriverJourney --> User
    DriverJourney --> Location

}

@enduml