@startuml Hello World

Title SignIn Class Diagram
'Character	Visibility
'-			private
'#			protected
'~			package private
'+			public

'Extension	<|--	Quan hệ mở rộng từ (là extends hoặc implements nhưng ko có annotations trong code)
'Composition	*--	 Quan hệ gắn kết chặt chẽ : part - of
'Aggregation	o--	Quan hệ liên kết giữa hai thực thể : use, has

'Lưu ý, do mỗi Repository , IRepository đều không có gì bên trong nên khi tạo diagram mới thì chỉ cần copy lại rồi đổi tên


package pkgSignin <<Frame>> {
        class UsersController <<(C,orchid) controller>> {
            - _userRepo : IUserRepository
            - _mapper : IMapper
            + CreateUser(userDto : CreateUserDto) : Task<IActionResult>
            + UpdateUser(userDto : UpdateUserDto) :  Task<IActionResult>
        }
        class ControllerBase <<(C,orchid) abstract>>
        class UserRepository <<(C,orchid) repository>>
        interface IUserRepository <<(I,#FF7700) repository>>
        class User <<(C,orchid) entity>> {
            - id :  Guid
            - userIdClerk : string
            - userName : string
            - passwordHash : string
            - email : string
            - displayName : string
            - emailConfirmed : bool
            - phoneNumber : string
            - lockoutEnd : DateTime
            - lockoutEnable : bool
            - accessFailCount : long
            - imageUrl : string
            - dob : DateTime
            - address : string
            - dateCreated : DateTime
            - dateUpdated : DateTime
            - statusUser : int
            - role : string

            - projects : HashSet
            - scenarios: HashSet
            - subscriptionPlans : HashSet
            - userSubscriptions : HashSet
        }
        class clerk-web-hook-create <<(A, yellow) middleware>>
        class CreateUserDtos <<(C,orchid) dtos>>{
            - Data : Data
            - Object : string
            - Type : string
        }

        class UserRepository implements IUserRepository
        class UsersController extends ControllerBase
        UsersController o-- IUserRepository
        UsersController o-- CreateUserDtos
        UserRepository o-- User
        "clerk-web-hook-create" -- UsersController

}

package pkgSignout <<Frame>> {
        class UsersController <<(C,orchid) controller>> {
            - _userRepo : IUserRepository
            - _mapper : IMapper
            + CreateUser(userDto : CreateUserDto) : Task<IActionResult>
            + UpdateUser(userDto : UpdateUserDto) :  Task<IActionResult>
        }
        class ControllerBase <<(C,orchid) abstract>>
        class UserRepository <<(C,orchid) repository>>
        interface IUserRepository <<(I,#FF7700) repository>>
        !includesub ModelsClassDiagram.plantuml!User
        class AuthConfig <<(A, yellow) middleware>>
        class CreateUserDtos <<(C,orchid) dtos>>{
            - Data : Data
            - Object : string
            - Type : string
        }
        class UserRepository implements IUserRepository
        class UsersController extends ControllerBase

        UsersController o-- IUserRepository
        UsersController o-- CreateUserDtos
        UserRepository o-- User
        AuthConfig -- UsersController
}

@enduml