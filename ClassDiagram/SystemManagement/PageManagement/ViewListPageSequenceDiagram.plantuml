@startuml
skinparam classAttributeIconSize 0
skinparam SequenceMessageAlignment center
Title Get All Pages Sequence Diagram

actor "User" as U
boundary "Screen Page Management" as PPage
participant "PagesController" as PagesController
participant "IPageRepository" as IPageRepo
participant "IMapper" as Mapper
participant "ResponsePaging" as ResponsePaging
database "SqlServer" as DbContext


U -> PPage : Go to Page management
activate PPage

PPage -> PagesController : Call GetAllPage()
activate PagesController


    PagesController -> PagesController : Check if index or size are provided
    alt No pagination parameters (index, size)
        PagesController -> IPageRepo : Get all Pages by name search
        activate IPageRepo
        IPageRepo -> DbContext : Query all Pages based on search key
        activate DbContext
        DbContext --> IPageRepo : Return list of Pages
        deactivate DbContext
        IPageRepo --> PagesController : Return list of Pages
        deactivate IPageRepo
    else Pagination parameters provided (index, size)
        PagesController -> IPageRepo : Get paginated Pages by name search
        activate IPageRepo
        IPageRepo -> DbContext : Query paginated Pages based on search key
        activate DbContext
        DbContext --> IPageRepo : Return paginated list of Pages
        deactivate DbContext
        IPageRepo --> PagesController : Return paginated list of Pages and total count
        deactivate IPageRepo
    end

    PagesController -> Mapper : Map Pages to ViewPageDtos
    activate Mapper
    Mapper --> PagesController : Return mapped ViewPageDto list
    deactivate Mapper

    PagesController -> ResponsePaging : Create response paging object
    activate ResponsePaging
    ResponsePaging --> PagesController : Return ResponsePaging object with data and total count
    deactivate ResponsePaging
    PagesController --> PPage : Return data response
    deactivate PagesController
    PPage --> U : Show Pages with pagination
    deactivate PPage



@enduml
